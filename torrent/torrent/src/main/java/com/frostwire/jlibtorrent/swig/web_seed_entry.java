/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.frostwire.jlibtorrent.swig;

public class web_seed_entry {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected web_seed_entry(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(web_seed_entry obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libtorrent_jni.delete_web_seed_entry(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public web_seed_entry(String url_, type_t type_, String auth_, string_string_pair_vector extra_headers_) {
    this(libtorrent_jni.new_web_seed_entry__SWIG_0(url_, type_.swigValue(), auth_, string_string_pair_vector.getCPtr(extra_headers_), extra_headers_), true);
  }

  public web_seed_entry(String url_, type_t type_, String auth_) {
    this(libtorrent_jni.new_web_seed_entry__SWIG_1(url_, type_.swigValue(), auth_), true);
  }

  public web_seed_entry(String url_, type_t type_) {
    this(libtorrent_jni.new_web_seed_entry__SWIG_2(url_, type_.swigValue()), true);
  }

  public boolean op_eq(web_seed_entry e) {
    return libtorrent_jni.web_seed_entry_op_eq(swigCPtr, this, web_seed_entry.getCPtr(e), e);
  }

  public boolean op_lt(web_seed_entry e) {
    return libtorrent_jni.web_seed_entry_op_lt(swigCPtr, this, web_seed_entry.getCPtr(e), e);
  }

  public void setUrl(String value) {
    libtorrent_jni.web_seed_entry_url_set(swigCPtr, this, value);
  }

  public String getUrl() {
    return libtorrent_jni.web_seed_entry_url_get(swigCPtr, this);
  }

  public void setType(type_t value) {
    libtorrent_jni.web_seed_entry_type_set(swigCPtr, this, value.swigValue());
  }

  public type_t getType() {
    return type_t.swigToEnum(libtorrent_jni.web_seed_entry_type_get(swigCPtr, this));
  }

  public void setAuth(String value) {
    libtorrent_jni.web_seed_entry_auth_set(swigCPtr, this, value);
  }

  public String getAuth() {
    return libtorrent_jni.web_seed_entry_auth_get(swigCPtr, this);
  }

  public void setExtra_headers(string_string_pair_vector value) {
    libtorrent_jni.web_seed_entry_extra_headers_set(swigCPtr, this, string_string_pair_vector.getCPtr(value), value);
  }

  public string_string_pair_vector getExtra_headers() {
    long cPtr = libtorrent_jni.web_seed_entry_extra_headers_get(swigCPtr, this);
    return (cPtr == 0) ? null : new string_string_pair_vector(cPtr, false);
  }

  public void setRetry(ptime value) {
    libtorrent_jni.web_seed_entry_retry_set(swigCPtr, this, ptime.getCPtr(value), value);
  }

  public ptime getRetry() {
    long cPtr = libtorrent_jni.web_seed_entry_retry_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ptime(cPtr, false);
  }

  public void setSupports_keepalive(boolean value) {
    libtorrent_jni.web_seed_entry_supports_keepalive_set(swigCPtr, this, value);
  }

  public boolean getSupports_keepalive() {
    return libtorrent_jni.web_seed_entry_supports_keepalive_get(swigCPtr, this);
  }

  public void setResolving(boolean value) {
    libtorrent_jni.web_seed_entry_resolving_set(swigCPtr, this, value);
  }

  public boolean getResolving() {
    return libtorrent_jni.web_seed_entry_resolving_get(swigCPtr, this);
  }

  public void setRemoved(boolean value) {
    libtorrent_jni.web_seed_entry_removed_set(swigCPtr, this, value);
  }

  public boolean getRemoved() {
    return libtorrent_jni.web_seed_entry_removed_get(swigCPtr, this);
  }

  public void setEndpoint(tcp_endpoint value) {
    libtorrent_jni.web_seed_entry_endpoint_set(swigCPtr, this, tcp_endpoint.getCPtr(value), value);
  }

  public tcp_endpoint getEndpoint() {
    long cPtr = libtorrent_jni.web_seed_entry_endpoint_get(swigCPtr, this);
    return (cPtr == 0) ? null : new tcp_endpoint(cPtr, false);
  }

  public void setPeer_info(policy.ipv4_peer value) {
    libtorrent_jni.web_seed_entry_peer_info_set(swigCPtr, this, policy.ipv4_peer.getCPtr(value), value);
  }

  public policy.ipv4_peer getPeer_info() {
    long cPtr = libtorrent_jni.web_seed_entry_peer_info_get(swigCPtr, this);
    return (cPtr == 0) ? null : new policy.ipv4_peer(cPtr, false);
  }

  public void setRestart_request(peer_request value) {
    libtorrent_jni.web_seed_entry_restart_request_set(swigCPtr, this, peer_request.getCPtr(value), value);
  }

  public peer_request getRestart_request() {
    long cPtr = libtorrent_jni.web_seed_entry_restart_request_get(swigCPtr, this);
    return (cPtr == 0) ? null : new peer_request(cPtr, false);
  }

  public void setRestart_piece(char_vector value) {
    libtorrent_jni.web_seed_entry_restart_piece_set(swigCPtr, this, char_vector.getCPtr(value), value);
  }

  public char_vector getRestart_piece() {
    long cPtr = libtorrent_jni.web_seed_entry_restart_piece_get(swigCPtr, this);
    return (cPtr == 0) ? null : new char_vector(cPtr, false);
  }

  public enum type_t {
    url_seed,
    http_seed;

    public final int swigValue() {
      return swigValue;
    }

    public static type_t swigToEnum(int swigValue) {
      type_t[] swigValues = type_t.class.getEnumConstants();
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (type_t swigEnum : swigValues)
        if (swigEnum.swigValue == swigValue)
          return swigEnum;
      throw new IllegalArgumentException("No enum " + type_t.class + " with value " + swigValue);
    }

    @SuppressWarnings("unused")
    private type_t() {
      this.swigValue = SwigNext.next++;
    }

    @SuppressWarnings("unused")
    private type_t(int swigValue) {
      this.swigValue = swigValue;
      SwigNext.next = swigValue+1;
    }

    @SuppressWarnings("unused")
    private type_t(type_t swigEnum) {
      this.swigValue = swigEnum.swigValue;
      SwigNext.next = this.swigValue+1;
    }

    private final int swigValue;

    private static class SwigNext {
      private static int next = 0;
    }
  }

}
